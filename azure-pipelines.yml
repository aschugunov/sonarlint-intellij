pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: sonarsource-build-variables

resources:
  repositories:
    - repository: commonTemplates
      type: git
      name: pipelines-yaml-templates
      ref:  refs/tags/v1.0.9


stages:
- template: stage-with-burgr-notifications.yml@commonTemplates
  parameters:
    burgrName: 'build'
    burgrType: 'build'
    stageName: 'build'
    stageDisplayName: Build and stage to repox
    jobs:
    - job: build
      displayName: Build and stage to repox
      variables:
        GRADLE_USER_HOME: $(Pipeline.Workspace)/.gradle
      steps:
      - checkout: self
        fetchDepth: 1
      - task: Cache@2
        inputs:
          key: 'gradle | "$(Agent.OS)"'
          restoreKeys: gradle
          path: $(GRADLE_USER_HOME)
        displayName: Gradle build cache
      - template: update-gradle-version-steps.yml
      - task: PythonScript@0
        name: fixBranchName
        displayName: 'Compute short branch name for buildInfo'
        inputs:
          scriptSource: 'inline'
          script: |
            branch = "$(Build.SourceBranch)"
            refPrefix = "refs/heads/"
            if branch.startswith(refPrefix):
              fixedBranch = branch[len(refPrefix):]
            else:
              fixedBranch = branch
            # Workaround for https://github.com/Microsoft/azure-pipelines-agent/issues/838
            print("##vso[task.setvariable variable=fixedBranch;isOutput=true]" + fixedBranch)
      - task: Gradle@2
        inputs:
          options: --build-cache --stacktrace -i
          tasks: buildPlugin artifactoryPublish
          publishJUnitResults: false
          jdkVersionOption: '1.11'
        env:
          ARTIFACTORY_DEPLOY_USERNAME: $(ARTIFACTORY_DEPLOY_USERNAME)
          ARTIFACTORY_DEPLOY_PASSWORD: $(ARTIFACTORY_DEPLOY_PASSWORD)
          GIT_SHA1: $(Build.SourceVersion)
          GITHUB_BRANCH: $(fixBranchName.fixedBranch)
        displayName: 'Run Gradle build and deploy'
      - task: Gradle@2
        inputs:
          options: --stop
          tasks: c
          publishJUnitResults: false
          jdkVersionOption: '1.11'
        displayName: 'Stop Gradle daemon'
- template: stage-with-burgr-notifications.yml@commonTemplates
  parameters:
    burgrName: 'qa'
    burgrType: 'qa'
    stageName: 'qa'
    stageDisplayName: Run ITs
    stageDependencies: build
    jobs:
    - job: its
      displayName: Run ITs
      strategy:
        matrix:
#          Idea2018:
#            IDEA_VERSION: 'IC-2018.3'
#            JDKVersion: '1.11'
#          Idea2019:
#            IDEA_VERSION: 'IC-2019.3'
#            JDKVersion: '1.11'
          Idea2020:
            IDEA_VERSION: 'IC-2020.1.2'
            JDKVersion: '1.11'
#          IdeaEAP:
#            IDEA_VERSION: 'LATEST-EAP-SNAPSHOT'
#            JDKVersion: '1.11'
      steps:
      - checkout: self
        fetchDepth: 1
      - template: update-gradle-version-steps.yml
      - task: DownloadSecureFile@1
        displayName: 'Download Maven settings'
        name: mavenSettings
        inputs:
          secureFile: 'maven-settings.xml'
      - bash: |
          mvn org.apache.maven.plugins:maven-dependency-plugin:3.1.1:unpack -B --settings $(mavenSettings.secureFilePath) -Denable-repo=qa -Dartifact=org.sonarsource.sonarlint.intellij:sonarlint-intellij:$(PROJECT_VERSION):zip -DoutputDirectory=$(Agent.BuildDirectory)/staged-plugin
        displayName: 'Download staged plugin'
        env:
          ARTIFACTORY_QA_READER_USERNAME: $(ARTIFACTORY_QA_READER_USERNAME)
          ARTIFACTORY_QA_READER_PASSWORD: $(ARTIFACTORY_QA_READER_PASSWORD)
      - bash: |
          set -e
          sudo apt-get update
          sudo apt-get install -y xvfb metacity
          sudo cp .azure-pipelines/xvfb.init /etc/init.d/xvfb
          sudo chmod +x /etc/init.d/xvfb
          sudo update-rc.d xvfb defaults
          sudo service xvfb start
          sleep 10 # give xvfb some time to start
          export DISPLAY=:10
        displayName: Setup Xvfb and Metacity
        condition: ne(variables['imageName'], 'windows-latest')
      - bash: |
          set -e
          cd its
          mkdir -p build/idea-sandbox/system/log/
          touch build/idea-sandbox/system/log/idea.log
          ./gradlew --stacktrace --info -PijVersion=$(IDEA_VERSION) -PslPluginLocation=$(Agent.BuildDirectory)/staged-plugin/sonarlint-intellij runIdeForUiTests &
          tail -f -n +1 build/idea-sandbox/system/log/idea.log | while read LOGLINE
          do
             echo $LOGLINE
             [[ "${LOGLINE}" == *"Responding at http://0.0.0.0:8082"* ]] && pkill -P $$ tail
          done
          lsof -i -P -n | grep LISTEN
          jps -v
          ./gradlew --no-daemon --stacktrace -i -PijVersion=$(IDEA_VERSION) test
        displayName: 'Run UI tests on $(IDEA_VERSION)'
        env:
          DISPLAY: ':10'
      - bash: |
          set -e
          cd its
          cat build/idea-sandbox/system/log/idea.log
        displayName: 'Log'
        condition: succeededOrFailed()
